№ Д / З №3

# 1. Из двух чисел, одно из которых четное, а другое нечетное,
# и определить вывести на экран нечетное число.

'' '
а = 5
b = 2
если a% 2 == 0 и b% 2 == 0:
    print ('четное число')
еще:
    print (a, 'Нечентное число')

'' '

# 2. Вводятся три разных числа. Найти, какое из них является средним
# (больше одного, но меньше другого).

'' '
a = int (input ('Первое число:'))
b = int (input ('Введите второе число:'))
c = int (input ('Введите третье число:'))
если b <a <c или c <a <b:
    print ('Среднее:', a)
elif a <b <c или c <b <a:
    print ('Среднее:', b)
еще:
    print ('Среднее:', c)

'' '

# 3. Вводятся два целых числа. Проверить делится ли первое на второе.
# Вывести на экран сообщение об этом, а также остаток (если он есть)
# и частное (в любом случае).

'' '
a = int (вход ())
b = int (вход ())
если a% b == 0:
    print ('% d делится на% d'% (a, b))
еще:
    print ('% d не делится на% d'% (a, b))
    print ('Остаток:% d'% (a% b))
print ('Частное:% d'% (a // b))

'' '

# 4.Определить четверть координатной плоскости, которой
# принадлежит точка. Координаты точки настройки с клавиатуры

'' '
x = int (input ("x ="))
y = int (input ("y ="))
если x> 0 и y> 0:
    печать ('я')
elif x <0 и y> 0:
    печать ('II')
elif x <0 и y <0:
    печать ('III')
elif x> 0 и y <0:
    печать ('IV')
'' '

# 5. С помощью клавиатуры (или в коде) задавайте коэфициенты
# квадратного уравнения a * x ^ 2 + b * x + c = 0. Найдите корни этого
# уравнения

'' '
импортная математика

print ("Введите коэффициенты для уравнения")
print ("ax ^ 2 + bx + c = 0:")
a = float (input ("a ="))
b = float (ввод ("b ="))
c = float (ввод ("c ="))

дискр = Ь ** 2 - 4 * а * с
print ("Дискриминант D =% .2f"% discr)

если discr> 0:
    x1 = (-b + math.sqrt (дискр)) / (2 * a)
    x2 = (-b - math.sqrt (дискр)) / (2 * a)
    print ("x1 =% .2f \ nx2 =% .2f"% (x1, x2))
elif discr == 0:
    х = -b / (2 * а)
    print ("x =% .2f"% x)
еще:
    print ("Корней нет")

'' '

# 6. Выведите на экран все числа от 0 до 100 кратные 5. (С помощью
# диапазон в цикле)

'' '
для i в диапазоне (100):
    если я% 5 == 0:
        печать (я)

'' '
# 7. Выведите на экран все кубы чисел от 3 до 12. Кубом числа
# называется 3 степень числа. 3 в кубе = 3 * 3 * 3.

'' '

для i в диапазоне (3, 12):
    печать (я ** 3)

'' '

# 8. Поменяйте первый и последний элемент списка.

'' '

mylist = [11,23,5,8,13,17]
first_el = mylist.pop (0)
last_el = mylist.pop (-1)
mylist.insert (0, last_el)
mylist.append (first_el)
печать (мой список)

'' '

# 9. Дан список. Сформируйте новый список по следующим правилам.
# Если данный список пустой, сообщите об этом. Если список имеет
# элементов. То УДВОЙТЕ каждый элемент списка, если он стоит на
# четной позиции.
# 2 -> 4
# '2' -> '22'

'' '
mylist = [11,23,5,8,13,17]
если мой список:
    для i в диапазоне (len (mylist)):
        если я% 2 == 0:
            печать (mylist [i] * 2)
'' '

# 10.Дан список, состоящий из целых чисел. Вывести следующие
# характеристики списка: сумма, максимальная и минимальный
# элемент, существуют ли отрицательные элементы, если да, то какие.

'' '

mas = [11, 23, 5, -8, 13, -17]
print ('минимальное число:', min (mas), 'максимальное число:', max (mas), 'сумма чисел:', sum (mas))
lst_number = [x для x в массе, если x <0]
print ('отрицательные значения:', lst_number)

'' '
